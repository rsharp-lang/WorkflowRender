{"definePipeline":{"author":null,"declares":{"name":"definePipeline","parameters":[{"name":"seq","text":null}],"sourceMap":{"File":"definePipeline.R","Line":"5","Method":{"Method":"definePipeline","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"seq","text":"a character vector of the app module names inside the workflow."}],"returns":null,"see_also":"","title":"Create a custom pipeline workflow execute sequence"},"dependency.context_env_missing":{"author":null,"declares":{"name":"dependency.context_env_missing","parameters":[{"name":"context","text":null}],"sourceMap":{"File":"errors.R","Line":"3","Method":{"Method":"dependency.context_env_missing","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"dependency.context_env_missing"},"dependency.workfiles_missing":{"author":null,"declares":{"name":"dependency.workfiles_missing","parameters":[{"name":"file","text":null}],"sourceMap":{"File":"errors.R","Line":"18","Method":{"Method":"dependency.workfiles_missing","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"dependency.workfiles_missing"},"finalize":{"author":null,"declares":{"name":"finalize","parameters":[{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"finalize.R","Line":"8","Method":{"Method":"finalize","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function used for unload a specific workflow environment\r\nrelease the resources of the pipeline workflow modules","examples":"","keywords":[],"parameters":[{"name":"ssid","text":"the session id for the multiple user environment,default NULL means global session environment"}],"returns":null,"see_also":"","title":"Mark end of the analysis workflow"},".internal_call":{"author":null,"declares":{"name":".internal_call","parameters":[{"name":"app","text":null},{"name":"context","text":null}],"sourceMap":{"File":"runner.R","Line":"57","Method":{"Method":".internal_call","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"\r\n\r\nThis internal function executes an analysis application after validating its dependencies.\r\nIt handles application execution, error reporting, and performance profiling.","details":"### Key Steps:\r\n1. ​**Dependency Check**:\r\nValidates if required context variables and files exist via `check_dependency(app, context)`.\r\n- If dependencies are met, proceeds to execute the application.\r\n- If dependencies are missing, throws an error with detailed missing resources.\r\n2. ​**Execution**:\r\n- Logs start\/end timestamps if `options(verbose = TRUE)`.\r\n- Executes `app$call` with arguments `app` and `context` using `do.call()`.\r\n3. ​**Error Handling**:\r\n- Aggregates missing dependencies into readable error messages.\r\n- Calls `throw_err()` to terminate the workflow and report issues.\r\n4. ​**Profiling**:\r\nRecords total execution time in `app$profiler$time` using `time_span()` for human-readable formatting.","examples":"#\\dontrun{\r\n\r\n# Define a sample application\r\napp <- list(\r\nname = \"demo_analysis\",\r\ncall = function(argv) {\r\nprint(paste(\"Running:\", argv$app$name))\r\n},\r\nprofiler = list()\r\n)\r\n# Execute with context\r\n.internal_call(app, context = list())\r\n\r\n#}","keywords":["internal"],"parameters":[{"name":"app","text":"A list defining the analysis application. Must contain:\r\n- `name`: (character) Name of the application (for logging).\r\n- `call`: (function) The function to execute the application logic.\r\n- `profiler`: (list) Stores performance metrics (e.g., execution time)."},{"name":"context","text":"A list or environment providing runtime context, such as input data paths,\r\nenvironment variables, or configuration settings required by the application."}],"returns":"Invisibly returns `NULL`. The function primarily updates `app$profiler` with execution\r\ntime metrics and may modify the `context` during execution.","see_also":"","title":".internal_call"},"run":{"author":null,"declares":{"name":"run","parameters":[{"name":"registry","text":"NULL"},{"name":"disables","text":"'list'()"}],"sourceMap":{"File":"workflowRender.R","Line":"18","Method":{"Method":"run","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"A workflow is consist with a set of the analysis modules in side,\r\nthe executative sequence define in workflow is based on the module name\r\nvector in the pipeline data slot","examples":"","keywords":[],"parameters":[{"name":"registry","text":"a callable function for create the workflow registry,\r\nthis parameter could be nothing if this workflow processor apps has\r\nbeen registered into the workflow as the processor components via\r\nthe ``hook`` function."},{"name":"disables","text":"a tuple list object that contains the workflow module\r\nactivate swtches. the list tuple key name should be the analysis app\r\nname and the corresponding slot value should be a logical value for\r\nindicates that the workflow module is disable or not: true for disable\r\nand skip, and false or null and missing for enable the corresponding\r\nworkflow module"}],"returns":null,"see_also":"","title":"Call this function to start run workflow"},"__runImpl":{"author":null,"declares":{"name":"__runImpl","parameters":[{"name":"context","text":null},{"name":"disables","text":"'list'()"}],"sourceMap":{"File":"workflowRender.R","Line":"76","Method":{"Method":"__runImpl","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"\r\n\r\nAn internal function that drives the execution of a modular workflow.\r\nIt sequentially processes analysis modules according to the pipeline\r\nconfiguration while respecting disablement rules.","details":"This function:\r\n\\enumerate{\r\n\\item Retrieves module execution order from `context$pipeline`\r\n\\item Checks disablement status through two mechanisms:\r\n\\itemize{\r\n\\item Explicit disablement via `disables` parameter\r\n\\item Module's own `disable` property (set by upstream modules)\r\n}\r\n\\item Executes non-disabled modules using `.internal_call()`\r\n\\item Provides verbose logging when `options(verbose=TRUE)`\r\n}\r\nThe workflow context is modified in-place by module execution.","examples":"","keywords":["internal"],"parameters":[{"name":"context","text":"A workflow context object containing:\r\n\\itemize{\r\n\\item{pipeline - character vector of module execution order}\r\n\\item{workflow - list of module definitions}\r\n}"},{"name":"disables","text":"A named list specifying module disablement status.\r\nFormat: `list(module_name = TRUE\/FALSE)`. Modules with TRUE will be skipped."}],"returns":"Invisibly returns NULL. Modifies the workflow context object in-place\r\nthrough module executions.","see_also":"\\code{\\link{.internal_call}} for module execution logic","title":"Internal Workflow Execution Engine"},".onLoad":{"author":null,"declares":{"name":".onLoad","parameters":[],"sourceMap":{"File":"zzz.R","Line":"1","Method":{"Method":".onLoad","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".onLoad"},"app":{"author":null,"declares":{"name":"app","parameters":[{"name":"name","text":null},{"name":"analysis","text":null},{"name":"desc","text":"'no description'"},{"name":"dependency","text":"NULL"}],"sourceMap":{"File":"app.R","Line":"13","Method":{"Method":"app","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"analysis","text":"a callable function for run the data analysis\r\ncontent. The function declare signature for this parameter\r\nvalue required of two parameter signature, see comment document\r\nof the ``app_check.delegate`` function."},{"name":"name","text":"the analysis app name"},{"name":"dependency","text":"usually be the environment context symbol\r\ndependency or the workspace file dependency"}],"returns":null,"see_also":"","title":"Analysis app constructor"},"app_check.signature":{"author":null,"declares":{"name":"app_check.signature","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app.R","Line":"33","Method":{"Method":"app_check.signature","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"app_check.signature"},"app_check.delegate":{"author":null,"declares":{"name":"app_check.delegate","parameters":[{"name":"analysis","text":null}],"sourceMap":{"File":"app.R","Line":"54","Method":{"Method":"app_check.delegate","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the analysis function should contains only two\r\nrequired parameters with specific name defined:\r\n1. app: a list object that defines the app object itself\r\n2. context: a list object that accept the workflow environment context\r\ndue to the reason of analysis app function is called via the ``do.call``\r\nfunction from the RENV base environment, so that the parameter value is\r\naligned with the invoke function target strictly, so you can not change\r\nthe parameter name or the parameter will not be aligned properly when\r\ncall this analysis app function.","examples":"","keywords":[],"parameters":[{"name":"analysis","text":"a callable function to check, just check of the required\r\nparameters is exists in the definition or not."}],"returns":null,"see_also":"","title":"Check the function signature of the app function"},"hook":{"author":null,"declares":{"name":"hook","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"hook.R","Line":"7","Method":{"Method":"hook","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the application module will be add to the ``context$workflow`` tuple list.","examples":"","keywords":[],"parameters":[{"name":"app","text":"the app object which is generated via the ``app`` function"}],"returns":null,"see_also":"","title":"Add workflow app component into the registry"},"__build_app":{"author":null,"declares":{"name":"__build_app","parameters":[{"name":"f","text":null}],"sourceMap":{"File":"reflection.R","Line":"11","Method":{"Method":"__build_app","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"Build a new workflow app module object based on the\r\ncustom attribute values that tagged on the target function","examples":"","keywords":[],"parameters":[{"name":"f","text":"the target function f which tagged the required\r\nattribute data inside: app, desc, context_env, workfiles"}],"returns":null,"see_also":"","title":"Build workflow app object"},"__workfiles":{"author":null,"declares":{"name":"__workfiles","parameters":[{"name":"files.uri","text":null}],"sourceMap":{"File":"reflection.R","Line":"50","Method":{"Method":"__workfiles","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"__workfiles"},"__workfile_uri_parser":{"author":null,"declares":{"name":"__workfile_uri_parser","parameters":[{"name":"uri","text":null}],"sourceMap":{"File":"reflection.R","Line":"73","Method":{"Method":"__workfile_uri_parser","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"uri","text":"a character vector that contains the workfile\r\nreference expression."}],"returns":"a tuple list object that contains the necessary\r\nparameter value for call ``workfile`` function for gets\r\nthe reference file path to the required data files.","see_also":"","title":"parse the workfile expression"},"set_dependency":{"author":null,"declares":{"name":"set_dependency","parameters":[{"name":"context.env","text":"'list'()"},{"name":"workfiles","text":"'list'()"}],"sourceMap":{"File":"set_dependency.R","Line":"23","Method":{"Method":"set_dependency","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the allowed data type of the context symbol could be:\r\n``any``, ``numeric``, ``integer``, ``character``, ``logical``,\r\n``function``","examples":"","keywords":[],"parameters":[{"name":"context_env","text":"a list of the depends environment symbol in the\r\ncurrent workflow context, value of this parameter it could be:\r\n1. a character vector of the required symbol(will assume that\r\nno data type is required), or\r\n2. a tuple list object with key name is the symbol name and\r\nthe corresponding tuple value is the required symbol type."},{"name":"workfiles","text":"a set of the required temp result files in the workflow\r\nthe format of this parameter value is a tuple list of the file path,\r\nwhere the key name is the app name and the corresponding tuple list value\r\nis a character vector of the required multiple reference temp file.\r\nthe data format of this parameter would be:\r\nlist(app1 = [file1, file2, ...], app2 = file3, ...)"}],"returns":null,"see_also":"","title":"function for create application dependency data"},"set_disable":{"author":null,"declares":{"name":"set_disable","parameters":[{"name":"app","text":null},{"name":"flag","text":"TRUE"}],"sourceMap":{"File":"set_disable.R","Line":"5","Method":{"Method":"set_disable","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"app","text":"the app name or the app object itself"}],"returns":null,"see_also":"","title":"Set workflow application disable flag"},"summary":{"author":null,"declares":{"name":"summary","parameters":[],"sourceMap":{"File":"summary.R","Line":"5","Method":{"Method":"summary","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"summary"},"tabulate_workflow_summary":{"author":null,"declares":{"name":"tabulate_workflow_summary","parameters":[{"name":"pool","text":null}],"sourceMap":{"File":"summary.R","Line":"28","Method":{"Method":"tabulate_workflow_summary","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[],"returns":"a dataframe object that contains the workflow analysis\r\nmodules information, example as the reference name, description,\r\ndependency information, etc.","see_also":"","title":"Extract the workflow analysis contents"},"check_dependency":{"author":null,"declares":{"name":"check_dependency","parameters":[{"name":"app","text":null},{"name":"context","text":"'.get_context'()"}],"sourceMap":{"File":"check_dependency.R","Line":"16","Method":{"Method":"check_dependency","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"app","text":"the analysis app object list which is construct\r\nvia the ``app`` function."}],"returns":"this function returns a data list that contains the\r\ndependency check result. there are some data symbol inside\r\nthis result object list:\r\n1. check: logical, for indicate the dependency check success or not;\r\n2. context: a tuple list object that contains of context symbol names\r\nwhich are not check success, and the reason of failure;\r\n3. file: character vector of dependency of local workspace file\r\ncheck not success","see_also":"","title":"Check of the analysis app dependency"},"check_dependency.context_env":{"author":null,"declares":{"name":"check_dependency.context_env","parameters":[{"name":"requires","text":null},{"name":"context","text":null}],"sourceMap":{"File":"context_env.R","Line":"6","Method":{"Method":"check_dependency.context_env","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the environment symbols from the analysis context should be\r\nset via the ``set_config`` function.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"Check of the required environment symbols"},"dependency_graph":{"author":null,"declares":{"name":"dependency_graph","parameters":[{"name":"mounts","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"3","Method":{"Method":"dependency_graph","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"dependency_graph"},"extract_workflow_vertex":{"author":null,"declares":{"name":"extract_workflow_vertex","parameters":[{"name":"meta","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"84","Method":{"Method":"extract_workflow_vertex","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"extract_workflow_vertex"},"dependency_analysis":{"author":null,"declares":{"name":"dependency_analysis","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"119","Method":{"Method":"dependency_analysis","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"dependency_analysis"},"check_dependency.localfiles":{"author":null,"declares":{"name":"check_dependency.localfiles","parameters":[{"name":"requires","text":null},{"name":"context","text":null}],"sourceMap":{"File":"localfiles.R","Line":"12","Method":{"Method":"check_dependency.localfiles","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the workfile path in the ``requires`` tuple file list should be\r\na relative file path which is relative to the app workdir","examples":"","keywords":[],"parameters":[{"name":"requires","text":"the required temp work files, should be a tuple list\r\nobject that contains the app reference and the related temp workfile,\r\nexample data format of this tuple list would be:\r\nlist(app1 = [file1, file2, ...], app2 = file3, ...)"}],"returns":null,"see_also":"","title":"Check for the upstream file dependency"},"use_cache":{"author":null,"declares":{"name":"use_cache","parameters":[{"name":"filepath","text":null},{"name":"create","text":null}],"sourceMap":{"File":"cache.R","Line":"11","Method":{"Method":"use_cache","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function will work around with the specific given\r\ncache file: this function will do nothing if the cache file is\r\nalready exists or invoke the ``create`` function for when file\r\nexists of the cache data is false.","examples":"","keywords":[],"parameters":[{"name":"create","text":"a callable function that accept a file path parameter\r\nto create the target cache file."}],"returns":null,"see_also":"","title":"Work with cache file"},"has_cachefile":{"author":null,"declares":{"name":"has_cachefile","parameters":[{"name":"filepath","text":null}],"sourceMap":{"File":"cache.R","Line":"30","Method":{"Method":"has_cachefile","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[],"returns":"a logical value for indicates the specific given file is\r\nexisted or not, for the filepath value in situations of:\r\n1. empty or null string value\r\n2. file is not existed\r\n3. file size is ZERO\r\nwill be determined as false.","see_also":"","title":"check the cache file is exists or not"},"init_context":{"author":null,"declares":{"name":"init_context","parameters":[{"name":"outputdir","text":"'.\/'"},{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"context.R","Line":"28","Method":{"Method":"init_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"for construct of the runtime environment, the generated\r\ncontext environment for run the analysis workflow has member\r\nslots of:\r\n1. root: a character vector for the ``outputdir`` directory path.\r\n2. analysis: a character vector for the directory path that\r\ncontains the analysis result output from current\r\nworkflow process.\r\n3. temp_dir: a character vector for the directory path that\r\ncontains the analysis temp files from current\r\nworkflow process.\r\n4. t0: a date time stamp when start current analysis workflow.\r\n5. workflow: a tuple list object that contains the analysis\r\napplication object that constructed from the\r\n``app`` function.\r\n6. pipeline: a character vector for run the application workflow.","examples":"","keywords":[],"parameters":[{"name":"outputdir","text":"the directory path to the workflow analysis workspace,\r\ndefault path value is current directory."},{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":"this function has no return value. and the constructed\r\nanalysis environment context object will be saved in the\r\nglobal environment with symbol name ``&[workflow_render]``.","see_also":"","title":"This function should be call at first"},"create_memory_context":{"author":null,"declares":{"name":"create_memory_context","parameters":[{"name":"mounts","text":"NULL"},{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"context.R","Line":"53","Method":{"Method":"create_memory_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"},{"name":"mounts","text":"should be a callable function for mounts the\r\napplication modules into the workflow registry."}],"returns":null,"see_also":"","title":"create an in-memory context object just used for run debug"},".get_context":{"author":null,"declares":{"name":".get_context","parameters":[{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"context.R","Line":"78","Method":{"Method":".get_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":"the context object which is generated via the\r\n``init_context`` function.","see_also":"","title":"get current workflow environment context"},"get_config":{"author":null,"declares":{"name":"get_config","parameters":[{"name":"name","text":null},{"name":"default","text":"NULL"},{"name":"warn.msg","text":"NULL"}],"sourceMap":{"File":"get_config.R","Line":"11","Method":{"Method":"get_config","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"name","text":"a character vector of the parameter name"},{"name":"default","text":"the default value for the parameter if missing from the\r\nworkflow context environment."}],"returns":"the parameter value, maybe is object value in character type,\r\na type cast function expression invoke example as:\r\n``as.logical``, ``as.double``, etc maybe required.","see_also":"","title":"get user parameter value inside current workflow context environment"},"set_config":{"author":null,"declares":{"name":"set_config","parameters":[{"name":"configs","text":"'list'()"}],"sourceMap":{"File":"set_config.R","Line":"6","Method":{"Method":"set_config","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"configs","text":"a key-value paire tuple list object that\r\ncontains the workflow parameter values."}],"returns":null,"see_also":"","title":"Set user parameters to the workflow context"},"pull_configs":{"author":null,"declares":{"name":"pull_configs","parameters":[],"sourceMap":{"File":"set_config.R","Line":"33","Method":{"Method":"pull_configs","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"pull_configs"},"workspace":{"author":null,"declares":{"name":"workspace","parameters":[{"name":"app","text":null},{"name":"ssid","text":"NULL"},{"name":"verbose","text":"FALSE"}],"sourceMap":{"File":"workspace.R","Line":"14","Method":{"Method":"workspace","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the verbose option could be config from the\r\ncommandline option: ``--verbose``","examples":"","keywords":[],"parameters":[{"name":"app","text":"the app list object or just the app name its\r\ncharacter text value."},{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":"a character vector of the workspace directory path\r\nof the specific analysis application.","see_also":"","title":"get app workspace location"},"workfile":{"author":null,"declares":{"name":"workfile","parameters":[{"name":"app","text":null},{"name":"relpath","text":"NULL"},{"name":"ssid","text":"NULL"},{"name":"verbose","text":"FALSE"}],"sourceMap":{"File":"workspace.R","Line":"57","Method":{"Method":"workfile","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the workfile path expression is in format string of: ``app:\/\/filepath``,\r\nexample as ``getMzSet:\/\/mzset.txt``, where we could parse the reference information\r\nfrom this character string: app name is ``getMzSet``, and the relpath data is\r\n``mzset.txt``. so, such configuation could be equals to the function invoke\r\nof the workfile function: ``workfile(\"getMzSet\", \"\/mzset.txt\");``.","examples":"","keywords":[],"parameters":[{"name":"app","text":"this app parameter value could be in 3 kinds\r\nof data type:\r\n1. app tuple list object, which is created via the ``app`` function.\r\n2. the app name character vector\r\n3. the workfile path expression, should be in format like: ``app:\/\/relpath\/to\/file.ext``"},{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":"the data file path of the required reference file inside this workflow","see_also":"","title":"Construct of the file path inside an app workspace"},"workdir_root":{"author":null,"declares":{"name":"workdir_root","parameters":[{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"workspace.R","Line":"79","Method":{"Method":"workdir_root","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"actually this function will returns the ``output`` dir\r\npath which is set via the ``init_context`` function","examples":"","keywords":[],"parameters":[{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":null,"see_also":"","title":"Get workspace root directory"},"result_dir":{"author":null,"declares":{"name":"result_dir","parameters":[{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"workspace.R","Line":"88","Method":{"Method":"result_dir","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"a character vector of the analysis result output directory.","examples":"","keywords":[],"parameters":[{"name":"ssid","text":"the session id for multiple user environment, default NULL means global user environment"}],"returns":null,"see_also":"","title":"get directory folder path for the analysis output result"},"workspace_temproot":{"author":null,"declares":{"name":"workspace_temproot","parameters":[{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"workspace.R","Line":"92","Method":{"Method":"workspace_temproot","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"workspace_temproot"},"get_app_name":{"author":null,"declares":{"name":"get_app_name","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"10","Method":{"Method":"get_app_name","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"app","text":"the app object list itself or the character\r\nvector of the name value"}],"returns":"this function always returns the app name\r\ncharacter vector","see_also":"","title":"Helper function for get app name"},"get_appName.obj":{"author":null,"declares":{"name":"get_appName.obj","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"36","Method":{"Method":"get_appName.obj","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"get_appName.obj"},"get_appName.func_reference":{"author":null,"declares":{"name":"get_appName.func_reference","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"52","Method":{"Method":"get_appName.func_reference","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"get_appName.func_reference"},"get_functionName":{"author":null,"declares":{"name":"get_functionName","parameters":[{"name":"f","text":null}],"sourceMap":{"File":"app_name.R","Line":"81","Method":{"Method":"get_functionName","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"get function name"},"filepath_safe":{"author":null,"declares":{"name":"filepath_safe","parameters":[{"name":"dir","text":null},{"name":"filename","text":null},{"name":"maxchars","text":"48"}],"sourceMap":{"File":"filetools.R","Line":"12","Method":{"Method":"filepath_safe","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function will make a safe file path, by\r\nprocessing the file name string in process:\r\n1. removes the unsafe character for windows filesystem\r\n2. make the file name short if the file name string len exccede the max chars","examples":"","keywords":[],"parameters":[],"returns":"this function generates a new character vector based on the\r\ninput dir and the filename for save a file safely.","see_also":"","title":"Create the file path safely"},"echo_warning":{"author":null,"declares":{"name":"echo_warning","parameters":[{"name":"msg","text":null},{"name":"app","text":"NULL"},{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"utils.R","Line":"7","Method":{"Method":"echo_warning","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"app","text":"the app object where this warning message is produced."},{"name":"msg","text":"a character vector of the warning message that this\r\nworkflow produced."}],"returns":null,"see_also":"","title":"print warning message on the screen and the log file"},"throw_err":{"author":null,"declares":{"name":"throw_err","parameters":[{"name":"msg","text":null},{"name":"app","text":"NULL"},{"name":"ssid","text":"NULL"}],"sourceMap":{"File":"utils.R","Line":"27","Method":{"Method":"throw_err","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"a wrapper of the ``stop`` function.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"echo error message on the screen and then crash the workflow"},"get_timestamp":{"author":null,"declares":{"name":"get_timestamp","parameters":[],"sourceMap":{"File":"utils.R","Line":"44","Method":{"Method":"get_timestamp","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this character vector of the current timespan\r\ncould be used inside a file path safely.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"get a character vector of current timespan"}}