{"definePipeline":{"author":null,"declares":{"name":"definePipeline","parameters":[{"name":"seq","text":null}],"sourceMap":{"File":"definePipeline.R","Line":"5","Method":{"Method":"definePipeline","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"seq","text":"a character vector of the app module names inside the workflow."}],"returns":null,"see_also":null,"title":"Create a custom pipeline workflow execute sequence"},"dependency.context_env_missing":{"author":null,"declares":{"name":"dependency.context_env_missing","parameters":[{"name":"context","text":null}],"sourceMap":{"File":"errors.R","Line":"3","Method":{"Method":"dependency.context_env_missing","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Generate the error message for missing context symbols"},"dependency.workfiles_missing":{"author":null,"declares":{"name":"dependency.workfiles_missing","parameters":[{"name":"file","text":null}],"sourceMap":{"File":"errors.R","Line":"18","Method":{"Method":"dependency.workfiles_missing","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Generate the error message for the missing required work files"},"finalize":{"author":null,"declares":{"name":"finalize","parameters":[],"sourceMap":{"File":"finalize.R","Line":"5","Method":{"Method":"finalize","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"release the resources of the pipeline workflow modules","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Mark end of the analysis workflow"},".internal_call":{"author":null,"declares":{"name":".internal_call","parameters":[{"name":"app","text":null},{"name":"context","text":null}],"sourceMap":{"File":"runner.R","Line":"3","Method":{"Method":".internal_call","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Invoke an analysis application"},"run":{"author":null,"declares":{"name":"run","parameters":[{"name":"registry","text":"NULL"},{"name":"disables","text":"'list'()"}],"sourceMap":{"File":"workflowRender.R","Line":"18","Method":{"Method":"run","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"A workflow is consist with a set of the analysis modules in side, the executative sequence define in workflow is based on the module name vector in the pipeline data slot","examples":null,"keywords":[],"parameters":[{"name":"registry","text":"a callable function for create the workflow registry, this parameter could be nothing if this workflow processor apps has been registered into the workflow as the processor components via the ``hook`` function."},{"name":"disables","text":"a tuple list object that contains the workflow module activate swtches. the list tuple key name should be the analysis app name and the corresponding slot value should be a logical value for indicates that the workflow module is disable or not: true for disable and skip, and false or null and missing for enable the corresponding workflow module"}],"returns":null,"see_also":null,"title":"Call this function to start run workflow"},"__runImpl":{"author":null,"declares":{"name":"__runImpl","parameters":[{"name":"context","text":null},{"name":"disables","text":"'list'()"}],"sourceMap":{"File":"workflowRender.R","Line":"37","Method":{"Method":"__runImpl","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"An internal function for start the workflow"},".onLoad":{"author":null,"declares":{"name":".onLoad","parameters":[],"sourceMap":{"File":"zzz.R","Line":"1","Method":{"Method":".onLoad","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".onLoad"},"app":{"author":null,"declares":{"name":"app","parameters":[{"name":"name","text":null},{"name":"analysis","text":null},{"name":"desc","text":"'no description'"},{"name":"dependency","text":"NULL"}],"sourceMap":{"File":"app.R","Line":"13","Method":{"Method":"app","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"analysis","text":"a callable function for run the data analysis content. The function declare signature for this parameter value required of two parameter signature, see comment document of the ``app_check.delegate`` function."},{"name":"name","text":"the analysis app name"},{"name":"dependency","text":"usually be the environment context symbol dependency or the workspace file dependency"}],"returns":null,"see_also":null,"title":"Analysis app constructor"},"app_check.signature":{"author":null,"declares":{"name":"app_check.signature","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app.R","Line":"33","Method":{"Method":"app_check.signature","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"check of the required app slot"},"app_check.delegate":{"author":null,"declares":{"name":"app_check.delegate","parameters":[{"name":"analysis","text":null}],"sourceMap":{"File":"app.R","Line":"54","Method":{"Method":"app_check.delegate","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the analysis function should contains only two required parameters with specific name defined: 1. app: a list object that defines the app object itself 2. context: a list object that accept the workflow environment context due to the reason of analysis app function is called via the ``do.call`` function from the RENV base environment, so that the parameter value is aligned with the invoke function target strictly, so you can not change the parameter name or the parameter will not be aligned properly when call this analysis app function.","examples":null,"keywords":[],"parameters":[{"name":"analysis","text":"a callable function to check, just check of the required parameters is exists in the definition or not."}],"returns":null,"see_also":null,"title":"Check the function signature of the app function"},"hook":{"author":null,"declares":{"name":"hook","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"hook.R","Line":"7","Method":{"Method":"hook","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the application module will be add to the ``context$workflow`` tuple list.","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the app object which is generated via the ``app`` function"}],"returns":null,"see_also":null,"title":"Add workflow app component into the registry"},"__build_app":{"author":null,"declares":{"name":"__build_app","parameters":[{"name":"f","text":null}],"sourceMap":{"File":"reflection.R","Line":"11","Method":{"Method":"__build_app","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"Build a new workflow app module object based on the custom attribute values that tagged on the target function","examples":null,"keywords":[],"parameters":[{"name":"f","text":"the target function f which tagged the required attribute data inside: app, desc, context_env, workfiles"}],"returns":null,"see_also":null,"title":"Build workflow app object"},"__workfiles":{"author":null,"declares":{"name":"__workfiles","parameters":[{"name":"files.uri","text":null}],"sourceMap":{"File":"reflection.R","Line":"38","Method":{"Method":"__workfiles","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"parse the workfile expression"},"__workfile_uri_parser":{"author":null,"declares":{"name":"__workfile_uri_parser","parameters":[{"name":"uri","text":null}],"sourceMap":{"File":"reflection.R","Line":"61","Method":{"Method":"__workfile_uri_parser","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"uri","text":"a character vector that contains the workfile reference expression."}],"returns":"a tuple list object that contains the necessary parameter value for call ``workfile`` function for gets the reference file path to the required data files.","see_also":null,"title":"parse the workfile expression"},"set_dependency":{"author":null,"declares":{"name":"set_dependency","parameters":[{"name":"context.env","text":"'list'()"},{"name":"workfiles","text":"'list'()"}],"sourceMap":{"File":"set_dependency.R","Line":"23","Method":{"Method":"set_dependency","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the allowed data type of the context symbol could be: ``any``, ``numeric``, ``integer``, ``character``, ``logical``, ``function``","examples":null,"keywords":[],"parameters":[{"name":"context_env","text":"a list of the depends environment symbol in the current workflow context, value of this parameter it could be: 1. a character vector of the required symbol(will assume that no data type is required), or 2. a tuple list object with key name is the symbol name and the corresponding tuple value is the required symbol type."},{"name":"workfiles","text":"a set of the required temp result files in the workflow the format of this parameter value is a tuple list of the file path, where the key name is the app name and the corresponding tuple list value is a character vector of the required multiple reference temp file. the data format of this parameter would be: list(app1 = [file1, file2, ...], app2 = file3, ...)"}],"returns":null,"see_also":null,"title":"function for create application dependency data"},"set_disable":{"author":null,"declares":{"name":"set_disable","parameters":[{"name":"app","text":null},{"name":"flag","text":"TRUE"}],"sourceMap":{"File":"set_disable.R","Line":"5","Method":{"Method":"set_disable","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the app name or the app object itself"}],"returns":null,"see_also":null,"title":"Set workflow application disable flag"},"summary":{"author":null,"declares":{"name":"summary","parameters":[],"sourceMap":{"File":"summary.R","Line":"5","Method":{"Method":"summary","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Inspect the workflow analysis modules"},"tabulate_workflow_summary":{"author":null,"declares":{"name":"tabulate_workflow_summary","parameters":[{"name":"pool","text":null}],"sourceMap":{"File":"summary.R","Line":"28","Method":{"Method":"tabulate_workflow_summary","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":"a dataframe object that contains the workflow analysis modules information, example as the reference name, description, dependency information, etc.","see_also":null,"title":"Extract the workflow analysis contents"},"check_dependency":{"author":null,"declares":{"name":"check_dependency","parameters":[{"name":"app","text":null},{"name":"context","text":"'.get_context'()"}],"sourceMap":{"File":"check_dependency.R","Line":"16","Method":{"Method":"check_dependency","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the analysis app object list which is construct via the ``app`` function."}],"returns":"this function returns a data list that contains the dependency check result. there are some data symbol inside this result object list: 1. check: logical, for indicate the dependency check success or not; 2. context: a tuple list object that contains of context symbol names which are not check success, and the reason of failure; 3. file: character vector of dependency of local workspace file check not success","see_also":null,"title":"Check of the analysis app dependency"},"check_dependency.context_env":{"author":null,"declares":{"name":"check_dependency.context_env","parameters":[{"name":"requires","text":null},{"name":"context","text":null}],"sourceMap":{"File":"context_env.R","Line":"6","Method":{"Method":"check_dependency.context_env","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the environment symbols from the analysis context should be set via the ``set_config`` function.","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Check of the required environment symbols"},"dependency_graph":{"author":null,"declares":{"name":"dependency_graph","parameters":[{"name":"mounts","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"3","Method":{"Method":"dependency_graph","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"try to extract the dependency graph from the application modules"},"extract_workflow_vertex":{"author":null,"declares":{"name":"extract_workflow_vertex","parameters":[{"name":"meta","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"84","Method":{"Method":"extract_workflow_vertex","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"extract_workflow_vertex"},"dependency_analysis":{"author":null,"declares":{"name":"dependency_analysis","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"dependency_graph.R","Line":"119","Method":{"Method":"dependency_analysis","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"dependency_analysis"},"check_dependency.localfiles":{"author":null,"declares":{"name":"check_dependency.localfiles","parameters":[{"name":"requires","text":null},{"name":"context","text":null}],"sourceMap":{"File":"localfiles.R","Line":"12","Method":{"Method":"check_dependency.localfiles","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the workfile path in the ``requires`` tuple file list should be a relative file path which is relative to the app workdir","examples":null,"keywords":[],"parameters":[{"name":"requires","text":"the required temp work files, should be a tuple list object that contains the app reference and the related temp workfile, example data format of this tuple list would be: list(app1 = [file1, file2, ...], app2 = file3, ...)"}],"returns":null,"see_also":null,"title":"Check for the upstream file dependency"},"use_cache":{"author":null,"declares":{"name":"use_cache","parameters":[{"name":"filepath","text":null},{"name":"create","text":null}],"sourceMap":{"File":"cache.R","Line":"11","Method":{"Method":"use_cache","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function will work around with the specific given cache file: this function will do nothing if the cache file is already exists or invoke the ``create`` function for when file exists of the cache data is false.","examples":null,"keywords":[],"parameters":[{"name":"create","text":"a callable function that accept a file path parameter to create the target cache file."}],"returns":null,"see_also":null,"title":"Work with cache file"},"has_cachefile":{"author":null,"declares":{"name":"has_cachefile","parameters":[{"name":"filepath","text":null}],"sourceMap":{"File":"cache.R","Line":"30","Method":{"Method":"has_cachefile","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":"a logical value for indicates the specific given file is existed or not, for the filepath value in situations of: 1. empty or null string value 2. file is not existed 3. file size is ZERO will be determined as false.","see_also":null,"title":"check the cache file is exists or not"},"init_context":{"author":null,"declares":{"name":"init_context","parameters":[{"name":"outputdir","text":"'.\/'"}],"sourceMap":{"File":"context.R","Line":"27","Method":{"Method":"init_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"for construct of the runtime environment, the generated context environment for run the analysis workflow has member slots of: 1. root: a character vector for the ``outputdir`` directory path. 2. analysis: a character vector for the directory path that contains the analysis result output from current workflow process. 3. temp_dir: a character vector for the directory path that contains the analysis temp files from current workflow process. 4. t0: a date time stamp when start current analysis workflow. 5. workflow: a tuple list object that contains the analysis application object that constructed from the ``app`` function. 6. pipeline: a character vector for run the application workflow.","examples":null,"keywords":[],"parameters":[{"name":"outputdir","text":"the directory path to the workflow analysis workspace, default path value is current directory."}],"returns":"this function has no return value. and the constructed analysis environment context object will be saved in the global environment with symbol name ``&[workflow_render]``.","see_also":null,"title":"This function should be call at first"},"create_memory_context":{"author":null,"declares":{"name":"create_memory_context","parameters":[{"name":"mounts","text":"NULL"}],"sourceMap":{"File":"context.R","Line":"51","Method":{"Method":"create_memory_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"mounts","text":"should be a callable function for mounts the application modules into the workflow registry."}],"returns":null,"see_also":null,"title":"create an in-memory context object just used for run debug"},".get_context":{"author":null,"declares":{"name":".get_context","parameters":[],"sourceMap":{"File":"context.R","Line":"74","Method":{"Method":".get_context","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":"the context object which is generated via the ``init_context`` function.","see_also":null,"title":"get current workflow environment context"},"set_config":{"author":null,"declares":{"name":"set_config","parameters":[{"name":"configs","text":"'list'()"}],"sourceMap":{"File":"set_config.R","Line":"6","Method":{"Method":"set_config","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"configs","text":"a key-value paire tuple list object that contains the workflow parameter values."}],"returns":null,"see_also":null,"title":"Set user parameters to the workflow context"},"get_config":{"author":null,"declares":{"name":"get_config","parameters":[{"name":"name","text":null},{"name":"default","text":"NULL"},{"name":"warn.msg","text":"NULL"}],"sourceMap":{"File":"set_config.R","Line":"41","Method":{"Method":"get_config","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"name","text":"a character vector of the parameter name"},{"name":"default","text":"the default value for the parameter if missing from the workflow context environment."}],"returns":"the parameter value, maybe is object value in character type, a type cast function expression invoke example as: ``as.logical``, ``as.double``, etc maybe required.","see_also":null,"title":"get user parameter value inside current workflow context environment"},"pull_configs":{"author":null,"declares":{"name":"pull_configs","parameters":[],"sourceMap":{"File":"set_config.R","Line":"77","Method":{"Method":"pull_configs","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"pull all configuration value from workflow registry"},"workspace":{"author":null,"declares":{"name":"workspace","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"workspace.R","Line":"13","Method":{"Method":"workspace","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the verbose option could be config from the commandline option: ``--verbose``","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the app list object or just the app name its character text value."}],"returns":"a character vector of the workspace directory path of the specific analysis application.","see_also":null,"title":"get app workspace location"},"workfile":{"author":null,"declares":{"name":"workfile","parameters":[{"name":"app","text":null},{"name":"relpath","text":"NULL"}],"sourceMap":{"File":"workspace.R","Line":"52","Method":{"Method":"workfile","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"the workfile path expression is in format string of: ``app:\/\/filepath``, example as ``getMzSet:\/\/mzset.txt``, where we could parse the reference information from this character string: app name is ``getMzSet``, and the relpath data is ``mzset.txt``. so, such configuation could be equals to the function invoke of the workfile function: ``workfile(\"getMzSet\", \"\/mzset.txt\");``.","examples":null,"keywords":[],"parameters":[{"name":"app","text":"this app parameter value could be in 3 kinds of data type: 1. app tuple list object, which is created via the ``app`` function. 2. the app name character vector 3. the workfile path expression, should be in format like: ``app:\/\/relpath\/to\/file.ext``"}],"returns":null,"see_also":null,"title":"Construct of the file path inside an app workspace"},"workdir_root":{"author":null,"declares":{"name":"workdir_root","parameters":[],"sourceMap":{"File":"workspace.R","Line":"73","Method":{"Method":"workdir_root","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"actually this function will returns the ``output`` dir path which is set via the ``init_context`` function","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Get workspace root directory"},"get_app_name":{"author":null,"declares":{"name":"get_app_name","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"10","Method":{"Method":"get_app_name","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the app object list itself or the character vector of the name value"}],"returns":"this function always returns the app name character vector","see_also":null,"title":"Helper function for get app name"},"get_appName.obj":{"author":null,"declares":{"name":"get_appName.obj","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"36","Method":{"Method":"get_appName.obj","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"Get app name from the generated analysis app module"},"get_appName.func_reference":{"author":null,"declares":{"name":"get_appName.func_reference","parameters":[{"name":"app","text":null}],"sourceMap":{"File":"app_name.R","Line":"52","Method":{"Method":"get_appName.func_reference","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"get app name from the analysis function as reference"},"get_functionName":{"author":null,"declares":{"name":"get_functionName","parameters":[{"name":"f","text":null}],"sourceMap":{"File":"app_name.R","Line":"81","Method":{"Method":"get_functionName","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"get function name"},"filepath_safe":{"author":null,"declares":{"name":"filepath_safe","parameters":[{"name":"dir","text":null},{"name":"filename","text":null},{"name":"maxchars","text":"48"}],"sourceMap":{"File":"filetools.R","Line":"12","Method":{"Method":"filepath_safe","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this function will make a safe file path, by processing the file name string in process: 1. removes the unsafe character for windows filesystem 2. make the file name short if the file name string len exccede the max chars","examples":null,"keywords":[],"parameters":[],"returns":"this function generates a new character vector based on the input dir and the filename for save a file safely.","see_also":null,"title":"Create the file path safely"},"echo_warning":{"author":null,"declares":{"name":"echo_warning","parameters":[{"name":"msg","text":null},{"name":"app","text":"NULL"}],"sourceMap":{"File":"utils.R","Line":"7","Method":{"Method":"echo_warning","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":null,"keywords":[],"parameters":[{"name":"app","text":"the app object where this warning message is produced."},{"name":"msg","text":"a character vector of the warning message that this workflow produced."}],"returns":null,"see_also":null,"title":"print warning message on the screen and the log file"},"throw_err":{"author":null,"declares":{"name":"throw_err","parameters":[{"name":"msg","text":null}],"sourceMap":{"File":"utils.R","Line":"28","Method":{"Method":"throw_err","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"a wrapper of the ``stop`` function.","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"echo error message on the screen and then crash the workflow"},"get_timestamp":{"author":null,"declares":{"name":"get_timestamp","parameters":[],"sourceMap":{"File":"utils.R","Line":"42","Method":{"Method":"get_timestamp","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"this character vector of the current timespan could be used inside a file path safely.","examples":null,"keywords":[],"parameters":[],"returns":null,"see_also":null,"title":"get a character vector of current timespan"}}